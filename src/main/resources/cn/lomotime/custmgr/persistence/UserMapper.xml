<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.lomotime.custmgr.persistence.UserDao" >
  <resultMap id="BaseResultMap" type="cn.lomotime.custmgr.domain.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="manager_id" property="managerId" jdbcType="VARCHAR" />
    <result column="manager_name" property="managerName" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="column_list" >
    u.id, u.user_name, u.real_name, u.password,
    u.manager_id, m.real_name as manager_name, u.role
  </sql>

  <sql id="join_from" >
    user u left outer join user m on u.manager_id = m.id
  </sql>

  <select id="getUserById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="column_list" />
    from 
    <include refid="join_from" />
    where u.id = #{id}
  </select>

  <delete id="deleteUserById" parameterType="java.lang.Integer" >
    delete from user where id = #{id}
  </delete>

  <select id="getUserByLogin" resultMap="BaseResultMap" >
    select * from user where user_name = #{param1} and password = #{param2}
  </select>

  <select id="getUsersByRole" resultMap="BaseResultMap" >
    select
    <include refid="column_list" />
    from 
    <include refid="join_from" />
    where u.role = #{role}
  </select>

  <insert id="insertUser" parameterType="cn.lomotime.custmgr.domain.User" >
    insert into user (user_name, real_name, password, role
    <if test="managerId != null" >
      , manager_id
    </if>
    )
    values (#{userName}, #{realName}, #{password}, #{role}
    <if test="managerId != null" >
      , #{managerId}
    </if>
    )
  </insert>

  <update id="updateRoleToSales" parameterType="java.lang.Integer" >
    update user set role = 'SALES' where id = #{userId}
  </update>

  <update id="clearManagerId" parameterType="java.lang.Integer" >
    update user set manager_id = null where manager_id = #{managerId};
  </update>

  <update id="updateUserSelective" parameterType="cn.lomotime.custmgr.domain.User" >
    update user
    <set >
      <if test="userName != null" >
        user_name = #{userName},
      </if>
      <if test="realName != null" >
        real_name = #{realName},
      </if>
      <if test="password != null" >
        password = #{password},
      </if>
      <if test="managerId != null" >
        manager_id = #{managerId},
      </if>
      <if test="role != null" >
        password = #{role},
      </if>
    </set>
    where id = #{id}
  </update>

</mapper>